{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(ls:*)",
      "Bash(chmod:*)",
      "Bash(./gradlew:*)",
      "Bash(sudo apt:*)",
      "Bash(apt list:*)",
      "Bash(wget:*)",
      "Bash(tar:*)",
      "Bash(export JAVA_HOME=\"$PWD/jdk-17.0.2\")",
      "Bash(export PATH=\"$JAVA_HOME/bin:$PATH\")",
      "Bash(java:*)",
      "Bash(export:*)",
      "Bash(export PATH=$JAVA_HOME/bin:$PATH)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(echo:*)",
      "Bash(find:*)",
      "Bash(rm:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(git init:*)",
      "Bash(git branch:*)",
      "Bash(git remote add:*)",
      "Bash(git add:*)",
      "Bash(git config:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(./push_to_github.sh)",
      "Bash(bash gradlew :app:compileDebugKotlin)",
      "Bash(./compile_and_test.bat)",
      "Bash(cmd.exe /c compile_and_test.bat)",
      "Bash(bash:*)",
      "Bash(mv:*)",
      "mcp__android-compiler__compile_kotlin",
      "mcp__android-compiler__check_gradle",
      "Bash(rg:*)",
      "Bash(touch:*)",
      "Bash(./scripts/analyze_dependencies.sh:*)",
      "Bash(./scripts/check_duplicate_deps.sh:*)",
      "Bash(./scripts/remove_duplicate_compose_deps.sh:*)",
      "Bash(tail:*)",
      "WebFetch(domain:developer.android.com)",
      "Bash(true)",
      "Bash(tree:*)",
      "Bash(./scripts/create_test_structure.sh:*)",
      "Bash(./scripts/fix_room_compiler.sh:*)",
      "Bash(./scripts/migrate_to_version_catalog.sh:*)",
      "Bash(./scripts/check_module_configuration.sh:*)",
      "Bash(./scripts/check_technical_debt.sh:*)",
      "Bash(git checkout:*)",
      "Bash(cp:*)",
      "Bash(./scripts/create_feature_module.sh:*)",
      "Bash(cat:*)",
      "Bash(dos2unix:*)",
      "Bash(sh gradlew:*)",
      "Bash(./scripts/check_version_catalog.sh:*)",
      "Bash(claude mcp:*)",
      "mcp__kotlin-compiler__set_project_path",
      "mcp__kotlin-compiler__compile_project",
      "Bash(./scripts/verify-version-migration.sh:*)",
      "Bash(ln:*)",
      "Bash(npm --prefix /mnt/d/kotlin/mcp-kotlin-compiler run build)",
      "Bash(unzip:*)",
      "Bash(./scripts/restore-session.sh:*)",
      "WebFetch(domain:github.com)",
      "Bash(python3:*)",
      "Bash(./check-setup.sh:*)",
      "Bash(timeout:*)",
      "WebFetch(domain:m3.material.io)",
      "WebFetch(domain:material.io)",
      "Bash(awk:*)",
      "Bash(gradle --version)",
      "Bash(/mnt/d/kotlin/Cc_xiaoji/scripts/update-mcp-test.sh:*)",
      "Bash(node:*)",
      "Bash(npm --version)",
      "Bash(./scripts/fix-mcp-network.sh:*)",
      "Bash(./scripts/test-network-connection.sh:*)",
      "Bash(./scripts/auto-config-proxy.sh:*)",
      "Bash(./scripts/fix-gradle-download.sh:*)",
      "Bash(~/.gradle/wrapper/dists/gradle-8.9-bin/8fd2a6/gradle-8.9/bin/gradle :feature:plan:compileDebugKotlin -p /mnt/d/kotlin/Cc_xiaoji)",
      "Bash(./scripts/quick-compile.sh:*)",
      "Bash(/mnt/d/kotlin/Cc_xiaoji/scripts/verify-plan-fixes.sh:*)",
      "Bash(/mnt/d/kotlin/Cc_xiaoji/scripts/verify-enum-fixes.sh:*)",
      "Bash(/mnt/d/kotlin/Cc_xiaoji/scripts/verify-thememode-unification.sh:*)",
      "Bash(/mnt/d/kotlin/Cc_xiaoji/scripts/verify-common-components.sh:*)",
      "Bash(curl:*)",
      "Bash(./scripts/compile-with-android-env.sh:*)",
      "Bash(./scripts/mcp-compile.sh:*)",
      "Bash(./scripts/simple-kotlin-check.sh:*)",
      "Bash(npm install)",
      "Bash(/mnt/d/kotlin/Cc_xiaoji/scripts/fix-mcp-server.sh:*)",
      "Bash(/mnt/d/kotlin/Cc_xiaoji/scripts/fix-mcp-server-v2.sh:*)",
      "Bash(/mnt/d/kotlin/Cc_xiaoji/scripts/fix-mcp-server-final.sh:*)",
      "Bash(diff:*)",
      "Bash(/mnt/d/kotlin/Cc_xiaoji/scripts/fix-wsl-build-tools.sh:*)",
      "Bash(./scripts/compile-helper.sh:*)",
      "Bash(ANDROID_HOME=/mnt/c/Users/Hua/AppData/Local/Android/Sdk ./gradlew :feature:ledger:compileDebugKotlin --no-daemon --console=plain)",
      "Bash(/compact)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:discord.com)",
      "WebFetch(domain:support.discord.com)",
      "Bash(pkill:*)",
      "Bash(kotlinc:*)",
      "Bash(./scripts/clean_build_cache.sh:*)",
      "Bash(mcp use android-compiler:*)",
      "Bash(git restore:*)",
      "WebFetch(domain:docs.sheetjs.com)",
      "WebFetch(domain:www.datacamp.com)",
      "WebFetch(domain:wandb.ai)",
      "Bash(where claude)",
      "Bash(powershell:*)",
      "Bash(where git)",
      "Bash(where bash)",
      "Bash(\"D:\\Program Files\\Git\\usr\\bin\\bash.exe\" -c \"claude mcp add o3mcp -s user -- node ''D:/开发项目/mcp/o3mcp/dist/index.js''\")",
      "Bash(set CLAUDE_CODE_GIT_BASH_PATH=\"D:\\Program Files\\Git\\bin\\bash.exe\")",
      "Bash(dir:*)",
      "Bash(configure-mcp.bat)",
      "Bash(cmd /c:*)",
      "Bash(\"D:\\Program Files\\Git\\usr\\bin\\bash.exe\" -c \"claude mcp list\")",
      "Bash(set CLAUDE_CODE_GIT_BASH_PATH=\"D:\\Program Files\\Git\\usr\\bin\\bash.exe\")",
      "Bash(if exist \"D:\\Program Files\\Git\\bin\\bash.exe\" echo \"Found bash.exe\" else echo \"Not found\")",
      "Bash(wsl ls:*)",
      "Bash(taskkill:*)",
      "Bash(claude --debug)",
      "Bash(npm run verify:env:*)",
      "Bash(npm run start:*)",
      "Bash(wsl:*)",
      "Bash(copy:*)",
      "mcp__o3mcp__understand_with_o3",
      "Bash(gradlew:*)",
      "Bash(.\\gradlew.bat:*)",
      "Bash(D:kotlinCc_xiaojigradlew.bat assembleDebug)",
      "Bash(del:*)",
      "Bash(D:kotlinCc_xiaojiscriptsverify-ultrathink.bat)",
      "Bash(claude --doctor)",
      "Bash(claude doctor)",
      "Bash(D:kotlinCc_xiaojiscriptsultrathink-hook.bat)",
      "Bash(where node)",
      "Bash(where:*)",
      "Bash(cmd /c del:*)",
      "Bash(cmd /c \"del /F /Q D:\\kotlin\\Cc_xiaoji\\scripts\\*ultrathink*\")",
      "Bash(cmd /c \"del /F /Q D:\\kotlin\\Cc_xiaoji\\doc\\*ultrathink*\")",
      "Bash(cmd /c \"del /F /Q D:\\kotlin\\Cc_xiaoji\\D*ultrathink*\")",
      "Bash(git ls-tree:*)",
      "Bash(.gradlew :app:compileDebugKotlin)",
      "Bash(# 查找所有包含sheet.value的文件\nfind app/src/main/kotlin/com/ccxiaoji/app/data/excel/fastexcel -name \"\"*.kt\"\" -exec grep -l \"\"sheet\\.value(\"\" {} \\; > files_to_fix.txt\ncat files_to_fix.txt)",
      "Bash(.gradlew.bat :app:compileDebugKotlin --stacktrace)",
      "Bash(cmd.exe:*)",
      "Bash(diagnose-mcp.bat)",
      "Bash(scriptsdiagnose-mcp.bat)",
      "Bash(test:*)",
      "Bash(python:*)",
      "WebFetch(domain:mvnrepository.com)",
      "Bash(.\\gradlew.bat:*)",
      "Bash(.\\gradlew.bat shadowPoi:*)",
      "Bash(jar tf:*)",
      "Bash(.gradlew:*)",
      "WebFetch(domain:idev.cn)",
      "WebFetch(domain:poi.apache.org)",
      "WebFetch(domain:gitee.com)",
      "Bash(zip:*)",
      "Bash(move:*)",
      "Bash(scripts\\gradle-compile.bat)",
      "WebFetch(domain:kotlinlang.org)",
      "Bash(compile_kotlin)",
      "Bash(D:kotlinCc_xiaojidiagnose-mcp-en.bat)",
      "Bash(diagnose-mcp-en.bat)",
      "Bash(git tag:*)",
      "Bash(scriptscheck-ide-env.bat)",
      "Bash(./scripts/check-ide-env.bat)",
      "Bash(./scripts/setup-ide-env.bat)",
      "Bash(D:kotlinCc_xiaojigradlew.bat :app:compileDebugKotlin --no-daemon --console=plain)",
      "Bash(do echo \"Processing: $file\")",
      "Bash(do echo \"处理: $file\")",
      "Bash(do echo \"修复图标: $icon\")",
      "Bash(D:kotlinCc_xiaojigradlew.bat :feature:ledger:compileDebugKotlin --console=plain)",
      "Bash(compile_test.bat)",
      "Bash(compile_ledger.bat)",
      "Bash(D:\\kotlin\\Cc_xiaoji\\gradlew.bat :feature:ledger:compileDebugKotlin --console=plain)",
      "Bash(D:kotlinCc_xiaojicompile_quick.bat)",
      "Bash(mcp:*)",
      "Bash(quick_compile_ledger.bat)",
      "Bash(./quick_compile_ledger.bat)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :feature:ledger:compileDebugKotlin --console=plain)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :app:compileDebugKotlin --console=plain)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat clean :feature:ledger:compileDebugKotlin --console=plain)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :feature:ledger:compileDebugKotlin --console=plain --no-daemon)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :feature:schedule:compileDebugKotlin --console=plain)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat clean)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :app:assembleDebug --console=plain)",
      "Bash(git rm:*)",
      "Bash(git check-ignore:*)",
      "Bash(git reset:*)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :feature:ledger:testDebugUnitTest --tests=\"*LedgerRepositoryImplTest*\" --console=plain)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :feature:ledger:compileDebugUnitTestKotlin --console=plain)",
      "Bash(ping:*)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat clean --console=plain)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat assembleDebug --console=plain)",
      "WebSearch",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :app:processDebugResources --console=plain)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :feature:ledger:compileDebugKotlin --console=plain -Dorg.gradle.parallel=false)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :shared:notification:compileDebugKotlin --console=plain)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :feature:ledger:testDebugUnitTest --tests=\"*AlipayNotificationParserTest*\" --console=plain)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :core:database:compileDebugKotlin --console=plain)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :feature:ledger:testDebugUnitTest --tests=\"com.ccxiaoji.feature.ledger.domain.parser.AlipayNotificationParserTest\" --console=plain)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :feature:ledger:testDebugUnitTest --tests=\"com.ccxiaoji.feature.ledger.data.manager.DeduplicationManagerTest\" --console=plain)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :feature:ledger:testDebugUnitTest --tests=\"com.ccxiaoji.feature.ledger.data.manager.AutoLedgerIntegrationTest\" --console=plain)",
      "Bash(D:/kotlin/Cc_xiaoji/gradlew.bat :feature:ledger:testDebugUnitTest --tests=\"com.ccxiaoji.feature.ledger.data.manager.AutoLedgerIntegrationTest.测试支付宝支付通知解析_完整流程\" --console=plain)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "D:\\mnt\\d\\kotlin"
    ]
  },
  "enableAllProjectMcpServers": true,
  "outputStyle": "Explanatory"
}